<?xml version="1.0" encoding="UTF-8"?>
<web-app version="4.0"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee                       
                  http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd">
	<!-- webapp는 배포될 서버에 전송해서 버전 및 deploy의 설정 값들을 나타냄 배포되는 서버의 WAS의 web.xml과 
		같은 버전으로 설정 -->

	<!-- TODO 007 프로젝트가 서버에 전송될 때 사용되는 이름 -->
	<display-name>web009_servlet_feature</display-name>

	<!-- TODO 008 web.xml에 의해서 처음 호출되는 페이지를 지정할 수 있다 보안 영역의 페이지도 요청할 수 있다 ex) 
		/WEB-INF/views/index.jsp -->
	<welcome-file-list>
		<welcome-file>/WEB-INF/views/index.jsp</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- TODO 016 Application 전체에서 사용할 수 있는 초기값 -->
	<context-param>
		<param-name>contextParam</param-name>
		<param-value>봄(spring)</param-value>
	</context-param>

	<!-- TODO 011 com.min.edu.HelloServlet_2의 servlet 2.x 방식의 연결 -->
	<servlet>
		<servlet-name>servlet2</servlet-name>
		<servlet-class>com.min.edu.HelloServlet_2</servlet-class>
		<!-- TODO 014 포함하는 Servlet의 초기값을 지정하는 init-param -->
		<init-param>
			<param-name>webInit</param-name>
			<param-value>web Initial Value</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>servlet2</servlet-name>
		<url-pattern>/servlet2.do</url-pattern>
	</servlet-mapping>
	
	
	<!-- 에러 페이지는 맨 마지막에 -->
	<!-- TODO 025 특정한 Status 코드의 내용을 사용자에게 보여주지 않고 특정한 페이지를 보여줌  -->
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/error404.html</location>
	</error-page>
	
	
	<!-- 
		TODO 027 Filter를 통한 Application의 특정 혹은 전체 페이지가 요청될 때 먼저 실행되어 판단 및 흐름 제어
		ex) 특정값, 로그인 유무, ip 상태 
	-->
	
	<filter>
		<filter-name>filterFlow</filter-name>
		<filter-class>com.min.edu.comm.HelloFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>filterFlow</filter-name>
		<url-pattern>/servlet2.do</url-pattern>
	</filter-mapping>
	
	
	<!-- TODO 030 Application 전체에서 대기하고 있다가 자동으로 실행되는 클래스 -->
	<listener>
		<listener-class>com.min.edu.comm.HelloListener</listener-class>
	</listener>
</web-app>
